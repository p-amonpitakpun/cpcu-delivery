{"version":3,"sources":["pages/Login/style.module.css","pages/Robot/style.module.css","assets/robot.png","util.js","pages/Login/index.js","assets/bck.jpg","pages/Robot/index.js","Route.js","reportWebVitals.js","index.js"],"names":["module","exports","getToken","localStorage","getItem","sendPost","url","data","a","fetch","process","method","headers","body","JSON","stringify","sendGet","workurl","URL","Object","keys","forEach","key","searchParams","append","Login","state","status","username","password","renderHead","className","styles","HeadText","HeadTextWrong","HeadTextPass","submitLogin","event","preventDefault","Util","res","setState","json","setItem","token","setTimeout","props","history","push","handleText","field","object","currentTarget","value","loginResult","this","Page","Box","src","Robot","onSubmit","placeholder","onChange","e","type","textinput","submit","React","Component","withRouter","rooms","maptype","occupancy_map","selectroom","current_user","clicked_coordinate","robot_current_state","position","target","path","user","voicestate","socket","audioContext","myStream","scriptProcessor","detected","controlpanel","Fragment","high","onClick","recbuttHan","roomoptions","moveRoom","move","pause","stop","resume","map","label","clickMap","rect","getBoundingClientRect","localX","Math","round","clientX","left","localY","clientY","top","logOut","removeItem","renderInsideMap","RobotIMG","currentPos","style","currentClick","targetClick","renderPath","out","i","length","targetPath","emit","destination","streamAudioData","floatSamples","inputBuffer","getChannelData","Int16Array","from","n","s","max","min","buffer","startRecording","stream","AudioContext","inputPoint","createGain","microphone","createMediaStreamSource","analyser","createAnalyser","context","createScriptProcessor","connect","addEventListener","startrec","window","webkitAudioContext","navigator","mediaDevices","getUserMedia","audio","mandatory","googEchoCancellation","googAutoGainControl","googNoiseSuppression","googHighpassFilter","then","catch","console","log","stoprec","getTracks","removeEventListener","io","query","on","payload","planning_state","occupancy_grid_position","replace","msg","disconnect","namebox","name","logout","columnContainer","debug","secHead","statusBox","statusText","greyText","greenText","yellowText","togglePane","toggleButton","right","onMouseDown","toggleDot","Beautifulmap","Map","debug2","RouteDisplay","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b408e8a3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Page\":\"style_Page__1J22r\",\"Box\":\"style_Box__yrZPo\",\"Robot\":\"style_Robot__1aAbD\",\"HeadText\":\"style_HeadText__3vMN5\",\"typing\":\"style_typing__22jCa\",\"blink-caret\":\"style_blink-caret__1O4bU\",\"HeadTextWrong\":\"style_HeadTextWrong__1Y6m1\",\"typing2\":\"style_typing2__1nGmE\",\"HeadTextPass\":\"style_HeadTextPass__1pKzl\",\"typing3\":\"style_typing3__1kl4R\",\"textinput\":\"style_textinput__2nqW_\",\"submit\":\"style_submit__3EEMG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Page\":\"style_Page__3lO_-\",\"Beautifulmap\":\"style_Beautifulmap__1VnyD\",\"currentPos\":\"style_currentPos__3kHNH\",\"columnContainer\":\"style_columnContainer__Nq6Aw\",\"logout\":\"style_logout__WqGgL\",\"namebox\":\"style_namebox__Zz_KD\",\"name\":\"style_name__eptz7\",\"debug\":\"style_debug__1_nzi\",\"debug2\":\"style_debug2__1UosV\",\"toggleButton\":\"style_toggleButton__3bRhi\",\"right\":\"style_right__3m7Vc\",\"toggleDot\":\"style_toggleDot__2IX_X\",\"togglePane\":\"style_togglePane__2fEDe\",\"secHead\":\"style_secHead__1LBo2\",\"currentClick\":\"style_currentClick__1M8ll\",\"targetClick\":\"style_targetClick__2HQyJ\",\"targetPath\":\"style_targetPath__XqbWP\",\"statusText\":\"style_statusText__1VnBN\",\"greenText\":\"style_greenText__32yGO\",\"yellowText\":\"style_yellowText__1w9gn\",\"greyText\":\"style_greyText__1krqe\",\"blueText\":\"style_blueText__18sU_\",\"statusBox\":\"style_statusBox__34BN8\",\"high\":\"style_high__XHLtT\"};","export default __webpack_public_path__ + \"static/media/robot.d00afd71.png\";","const getToken = () => {\n    return localStorage.getItem('auth');\n};\n\nexport default {\n    sendPost: async(url, data) => {\n        return await fetch(`${process.env.REACT_APP_BACKEND_BASE}${url}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${getToken()}`\n            },\n            body: JSON.stringify(data)\n        });        \n    },\n    sendGet: async(url, data) => {\n        let workurl = new URL(`${process.env.REACT_APP_BACKEND_BASE}${url}`);\n        if(data)\n            Object.keys(data).forEach(key => workurl.searchParams.append(key, data[key]));\n        return await fetch(workurl, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${getToken()}`\n            }\n        }); \n    }\n};","import styles from './style.module.css';\nimport React from 'react';\nimport Robot from '../../assets/robot.png';\nimport { withRouter } from 'react-router-dom';\nimport Util from '../../util';\n\nclass Login extends React.Component {\n\n    state = {\n        status: 0,\n        username: '',\n        password: ''\n    }\n\n    async componentDidMount() {\n        let res = await Util.sendGet('whoami',{a:'b'});\n        if(res.status===200)\n            this.props.history.push('/robot');\n    }\n\n    render() {\n        return <div className={styles.Page}>\n            <div className={styles.Box}>\n                <img src={Robot} className={styles.Robot} />\n                {this.renderHead()}\n                {this.state.status!==2 &&\n                <form onSubmit={this.submitLogin}>\n                    <input placeholder=\"Username\" onChange={(e)=>this.handleText(e, 'username')} value={this.state.username} type='text' className={styles.textinput} />\n                    <input placeholder=\"Password\" onChange={(e)=>this.handleText(e, 'password')} value={this.state.password} type='password' className={styles.textinput} />\n                    <input type='submit' className={styles.submit} value='Enter' />\n                </form>}\n            </div>\n        </div>;\n    }\n\n    renderHead = () => {\n        if (this.state.status===0)\n            return <div className={styles.HeadText}>&quot;Who ..  are .. you .. ?&quot;</div>;\n        else if(this.state.status===1)\n            return <div className={styles.HeadTextWrong}>&quot;Wrong .. Credential .. !&quot;</div>;\n        else if(this.state.status===2)\n            return <div className={styles.HeadTextPass}>&quot;Welcome .. :)&quot;</div>;\n    }\n\n    submitLogin = async(event) => {\n        event.preventDefault();\n        let res = await Util.sendPost('auth',{username: this.state.username, password: this.state.password});\n        if (res.status!==200)\n            this.setState({status:1});\n        else {\n            let body = await res.json();\n            localStorage.setItem('auth', body.token);\n            this.setState({status:2});\n            setTimeout(()=>{\n                this.props.history.push('/robot');\n            },3000);\n        }\n    }\n\n    handleText = (event, field) => {\n        let object = {};\n        object[field] = event.currentTarget.value;\n        this.setState(object);\n    }\n\n    loginResult = (username, password) => {\n        if(username===password)\n            return true;\n        else\n            return false;\n    }\n\n}\n\nexport default withRouter(Login);\n","export default __webpack_public_path__ + \"static/media/bck.6a169fe7.jpg\";","import styles from './style.module.css';\nimport React from 'react';\nimport Map from '../../assets/bck.jpg';\nimport { withRouter } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport RobotIMG from '../../assets/robot.png';\n\nconst rooms = {\n    '1': [262,244],\n    '2': [253,333],\n};\n\nclass Robot extends React.Component {\n\n    state = {\n        maptype: 0, // 0 -> Beautiful 1-> Occupancy\n        occupancy_map: '',\n        selectroom: '1',\n        current_user: null,\n        clicked_coordinate: [0,0],\n        robot_current_state: {\n            status: 0, // 0=idle 1=walk 2=paused\n            position: [0, 0],\n            target: null,\n            path: [],\n            user: 'User1'\n        },\n        voicestate: false,\n        socket:null,\n        audioContext: null,\n        myStream:null,\n        scriptProcessor:null,\n        detected: ''\n    }\n\n    async componentDidMount() {\n        let socket = io(process.env.REACT_APP_SOCKET_BASE, {\n            query: {\n                token: localStorage.getItem('auth')\n            }\n        });\n        socket.on('401', () => {\n            this.logOut();\n        });\n        socket.on('authenticated', (username) => {\n            this.setState({current_user:username});\n        });\n        socket.on('robotState', (payload) => {\n            let planning_state = payload.planning_state;\n            let robot_current_state = this.state.robot_current_state;\n            robot_current_state.position = payload.occupancy_grid_position;\n            robot_current_state.status = planning_state.state;\n            robot_current_state.target = planning_state.target;\n            robot_current_state.path = planning_state.path;\n            this.setState({\n                occupancy_map: `data:image/png;base64, ${payload.map.replace(/(\\r\\n|\\n|\\r)/gm, '')}`,\n                robot_current_state\n            });\n        });\n        socket.on('transcribe', async(msg) => {\n            if(this.state.robot_current_state.status===0) {\n                if(msg==='deliver object to room one') {\n                    await this.setState({selectroom:'1'});\n                    this.moveRoom();\n                }\n                else if(msg==='deliver object to room two') {\n                    await this.setState({selectroom:'2'});\n                    this.moveRoom();\n                }\n            }\n            else if(this.state.robot_current_state.status===1) {\n                if(msg==='pause delivery')\n                    this.pause();\n                else if(msg==='stop delivery')\n                    this.stop();\n            }\n            else if(this.state.robot_current_state.status===2) {\n                if(msg==='resume delivery')\n                    this.resume();\n                else if(msg==='stop delivery')\n                    this.stop();\n            }\n        });\n        socket.on('transcribestart', () => {\n            this.startrec();\n        });\n        this.setState({socket});\n    }\n\n    async componentWillUnmount() {\n        this.state.socket.disconnect();\n    }\n\n    render() {\n        return <div className={styles.Page}>\n            <div className={styles.namebox}>Welcome, <b className={styles.name}>{this.state.current_user}</b> <div className={styles.logout} onClick={this.logOut}>logout</div></div>\n            <hr />\n            <div className={styles.columnContainer}>\n                <div className={styles.debug}>\n                    <div className={styles.secHead}>Robot Status</div>\n                    {<div className={styles.statusBox}>\n                        <b className={styles.statusText}>Status:</b> \n                        {this.state.robot_current_state.status===0 && <b className={styles.greyText}>Idle</b>}\n                        {this.state.robot_current_state.status===1 && <b className={styles.greenText}>Moving</b>}\n                        {this.state.robot_current_state.status===2 && <b className={styles.yellowText}>Paused</b>}\n                    </div>}\n                    <div className={styles.statusBox}>\n                        <b className={styles.statusText}>Map:</b> \n                    </div>\n                    <div className={styles.togglePane}>\n                        <div>Beautified</div>\n                        <div className={this.state.maptype===0?`${styles.toggleButton}`: `${styles.toggleButton} ${styles.right}`} onMouseDown={(event)=>event.preventDefault()} onClick={()=>{this.setState({maptype:1-this.state.maptype});}}>\n                            <div className={styles.toggleDot} />\n                        </div>\n                        <div>Occupancy</div>\n                    </div>\n                    {this.state.maptype===0?\n                        <div onMouseDown={(event)=>event.preventDefault()} className={styles.Beautifulmap} onClick={this.clickMap}>\n                            <img src={Map} />\n                            {this.renderInsideMap()}\n                        </div>:\n                        <div onMouseDown={(event)=>event.preventDefault()} className={styles.Beautifulmap} onClick={this.clickMap}>\n                            <img src={this.state.occupancy_map} />\n                            {this.renderInsideMap()}\n                        </div>\n                    }\n                </div>\n                <div className={styles.debug2}>\n                    <div className={styles.secHead}>Robot Control</div>\n                    {this.controlpanel()}\n                </div>\n            </div>\n        </div>;\n    }\n\n    controlpanel = () => {\n        if(this.state.robot_current_state.status===0) {\n            return <React.Fragment>\n                <div className={styles.high}>Voice(Beta)</div>\n                <div>Press the button, then speak one of these 2 phrases and press stop</div>\n                <div>- Deliver object to room one</div>\n                <div>- Deliver object to room two</div>\n                <button onClick={this.recbuttHan}>{this.state.voicestate?'Stop recording':'Start recording'}</button>\n                <div className={styles.high}>Basic control(specify room)</div>\n                <div>Move to Room</div>\n                <select value={this.state.selectroom} onChange={(event)=>{this.setState({selectroom:event.currentTarget.value});}}>\n                    {this.roomoptions()}\n                </select>\n                <button onClick={this.moveRoom}>Go</button>\n                <div className={styles.high}>Advanced control(specify coordinate)</div>\n                <div>Click on the map the point to get coordinate</div>\n                <div>X: {this.state.clicked_coordinate[0]}</div>\n                <div>Y: {this.state.clicked_coordinate[1]}</div>\n                <button onClick={this.move}>Go</button>\n            </React.Fragment>;\n        }\n        else if(this.state.robot_current_state.status===1) {\n            return <React.Fragment>\n                <div className={styles.high}>Voice(Beta)</div>\n                <div>Press the button, then speak one of these 2 phrases and press stop</div>\n                <div>- Pause delivery</div>\n                <div>- Stop delivery</div>\n                <button onClick={this.recbuttHan}>{this.state.voicestate?'Stop recording':'Start recording'}</button>\n                <div className={styles.high}>Pause or cancel</div>\n                <button onClick={this.pause}>Pause</button>\n                <button onClick={this.stop}>Stop/Cancel</button>\n            </React.Fragment>;\n        }\n        else if(this.state.robot_current_state.status===2) {\n            return <React.Fragment>\n                <div className={styles.high}>Voice(Beta)</div>\n                <div>Press the button, then speak one of these 2 phrases and press stop</div>\n                <div>Resume delivery</div>\n                <div>Stop delivery</div>\n                <button onClick={this.recbuttHan}>{this.state.voicestate?'Stop recording':'Start recording'}</button>\n                <div className={styles.high}>Resume or cancel</div>\n                <button onClick={this.resume}>Resume</button>\n                <button onClick={this.stop}>Stop/Cancel</button>\n            </React.Fragment>;\n        }\n    }\n\n    roomoptions = () => {\n        return Object.keys(rooms).map((key) => {\n            return <option key={key} label={key} value={key}>{key}</option>;\n        });\n    }\n\n    clickMap=(event)=> {\n        let rect = event.currentTarget.getBoundingClientRect();\n        let localX = Math.round(event.clientX - rect.left);\n        let localY = Math.round(event.clientY - rect.top);\n        this.setState({clicked_coordinate:[localX, localY]});\n    }\n\n    logOut=()=> {\n        localStorage.removeItem('auth');\n        this.props.history.push('/');\n    }\n\n    renderInsideMap=()=>{\n        return <React.Fragment>\n            <img src={RobotIMG} className={styles.currentPos} style={{\n                top:`${this.state.robot_current_state.position[1] -12}px`,\n                left:`${this.state.robot_current_state.position[0] -12}px`\n            }} />\n            { this.state.robot_current_state.status===0 &&\n                <div className={styles.currentClick} style={{\n                    top:`${this.state.clicked_coordinate[1] - 5}px`,\n                    left:`${this.state.clicked_coordinate[0] - 5}px`\n                }} />\n            }\n            { (this.state.robot_current_state.status===1 || this.state.robot_current_state.status===2) &&\n                <div className={styles.targetClick} style={{\n                    top:`${this.state.robot_current_state.target[1] - 5}px`,\n                    left:`${this.state.robot_current_state.target[0] - 5}px`\n                }} />\n            }\n            { (this.state.robot_current_state.status===1 || this.state.robot_current_state.status===2) && this.renderPath()}\n        </React.Fragment>;\n    }\n\n    renderPath= ()=>{\n        let out = [];\n        for(let i=0;i<this.state.robot_current_state.path.length;i++) {\n            out.push(<div className={styles.targetPath} style={{\n                left:`${this.state.robot_current_state.path[i][0] - 5}px`,\n                top:`${this.state.robot_current_state.path[i][1] - 5}px`\n            }} />);\n        }\n        return out;\n    }\n\n    move = () => {\n        this.state.socket.emit('moveCommand',{\n            destination: this.state.clicked_coordinate\n        });\n    }\n\n    moveRoom = () => {\n        this.state.socket.emit('moveCommand',{\n            destination: rooms[this.state.selectroom]\n        });\n    }\n\n    stop = () => {\n        this.state.socket.emit('stopCommand');\n    }\n\n    resume = () => {\n        this.state.socket.emit('resumeCommand');\n    }\n\n    pause = () => {\n        this.state.socket.emit('pauseCommand');\n    }\n\n    streamAudioData = e => {\n        const floatSamples = e.inputBuffer.getChannelData(0);\n        const data = Int16Array.from(floatSamples.map((n) => {\n            var s = Math.max(-1, Math.min(1, n));\n            return s < 0 ? s * 0x8000 : s * 0x7FFF;\n        }));\n        this.state.socket.emit('audio', data.buffer);\n    };\n\n    startRecording = (stream) => { \n        let audioContext = this.state.audioContext || new AudioContext();\n        this.setState({audioContext});\n        if (!audioContext) { \n            return; \n        }\n        let myStream = stream; \n        this.setState({myStream});\n\n        // AudioNode used to control the overall gain (or volume) of the audio graph \n\n        const inputPoint = audioContext.createGain(); \n        const microphone = audioContext.createMediaStreamSource(myStream); \n        const analyser = audioContext.createAnalyser(); \n        let scriptProcessor = inputPoint.context.createScriptProcessor(2048, 2, 2);\n        this.setState({scriptProcessor});\n\n        microphone.connect(inputPoint); \n        inputPoint.connect(analyser); \n        inputPoint.connect(scriptProcessor); \n        scriptProcessor.connect(inputPoint.context.destination); \n        scriptProcessor.addEventListener('audioprocess', this.streamAudioData); \n    }\n\n    startrec=()=>{\n        window.AudioContext = window.AudioContext || window.webkitAudioContext; \n        navigator.mediaDevices.getUserMedia({ \n            audio: { \n                mandatory: { \n                    googEchoCancellation: 'false', \n                    googAutoGainControl: 'false', \n                    googNoiseSuppression: 'false', \n                    googHighpassFilter: 'false', \n                }, \n            }, \n        }).then(this.startRecording).catch( e => { \n            console.log(e); \n        } \n        );\n    }\n\n    stoprec=()=>{\n        if (this.state.myStream) { \n            // stop the browser microphone \n            this.state.myStream.getTracks()[0].stop(); \n            this.setState({myStream:null});\n        }\n        if (this.state.scriptProcessor) { \n            this.state.scriptProcessor.removeEventListener('audioprocess', this.streamAudioData); \n        }\n    }\n\n    recbuttHan = ()=>{\n        if(this.state.voicestate) {\n            console.log('ya');\n            this.stoprec();\n            this.state.socket.emit('stoprec');\n            this.setState({voicestate:false});\n        }\n        else {\n            console.log('ye');\n            this.state.socket.emit('startnewrec');\n            this.setState({voicestate:true});\n        }\n    }\n}\n\nexport default withRouter(Robot);\n","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n} from 'react-router-dom';\nimport Login from './pages/Login';\nimport Robot from './pages/Robot';\n\nexport default function RouteDisplay() {\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/robot\">\n                    <Robot />\n                </Route>\n                <Route path=\"/\">\n                    <Login />\n                </Route>\n            </Switch>\n        </Router>\n    );\n}\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport RouteDisplay from './Route';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <RouteDisplay />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}